#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;
vector<vector<int>> sq;
int blueCount = 0;
int whiteCount = 0;

void countPaper(int rowst, int rowend, int colst, int colend) {
	bool dif = true;
	int tmp = sq[rowst][colst];
	for (int i = rowst; i < rowend; i++) {
		for (int j = colst; j < colend; j++) {
			if (tmp != sq[i][j]) {
				dif = false;
			}
		}
	}
	if (dif == false) {
		int rowmid = (rowst + rowend) / 2;
		int colmid = (colst + colend) / 2;
		countPaper(rowst, rowmid, colst, colmid);//1사분면
		countPaper(rowst, rowmid, colmid, colend);//2사분면
		countPaper(rowmid, rowend, colst, colmid);//3사분면
		countPaper(rowmid, rowend, colmid, colend);//4사분면
		return;
	}
	
	//여기까지 오면 사각형에 같은 수만 있다는 거임
	if (sq[rowst][colst] == 0) whiteCount++;
	else blueCount++;

}

int main() {

	int n;
	cin >> n;
	int tmp;
	vector<int> tmpvec;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cin >> tmp;
			tmpvec.push_back(tmp);
		}
		sq.push_back(tmpvec);
		tmpvec.clear();
	}
	countPaper(0, n, 0, n);

	cout << whiteCount << "\n" << blueCount ;
	return 0;
}
