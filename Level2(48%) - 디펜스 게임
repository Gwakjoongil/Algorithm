//이 문제는 PQ를 떠올리기 어려웠음
//PQ만 떠올리면 풀만한 문제

//PQ 못떠올렸을 때의 반례 : n=7, k=1, enemy = {6,1,1,...}

#include <string>
#include <vector>
#include <queue>
using namespace std;

int solution(int n, int k, vector<int> enemy) {
    int answer = 0;
    int i=0;
    
    priority_queue<int> pq;
    int max=0;
    for(;i<enemy.size();i++){
        
        //감당 가능하면 일단ㄱㄱ
        if(n-enemy[i] >= 0){
            pq.push(enemy[i]);
            n-=enemy[i];    
        }
        //감당 안되는데 무적권을 갖고 있으면
        else if(n-enemy[i] < 0 && k>0){
            k--;
            //만약 기존에 싸운 흔적이 있으면
            if(pq.size()>0){
              max = pq.top();  
            }
            //기존 최대값이 크면 꺼내서 더하고 지금꺼랑 빼기
            if(enemy[i] < max){
                n+=max;
                pq.pop();
                n-=enemy[i];
                pq.push(enemy[i]);
            }
        }
        else break;
        answer++;
    
    }
    if(i == enemy.size()) return enemy.size();
    
    return answer;
}
