/*
이 문제는 결국 같은 행동 반복이다.
즉, n번째 접시를 A-> C로 옮기는 게 최종 목표
1. 그러기 위해선 1 ~ n-1까지 A->B로 옮겨야 함
2. 그리고 1~n-1까지 다시 B-> C로 옮겨야 함


1과 2 내부에선 다시 1과 2를 반복한다.
그러면 정답이 나옴.개신기함ㄷㄷ
*/

#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
using namespace std;
int cnt = 0;
vector<pair<int, int>> vec;
void hanoi(int n, int from, int mid, int to) {

	if (n == 1) {
		vec.push_back(make_pair(from, to));
		cnt++;
		return;
	}

	
	hanoi(n - 1, from, to, mid);
	vec.push_back(make_pair(from, to));
	cnt++;
	hanoi(n - 1, mid, from, to);

}


int main() {

	int n;
	cin >> n;

	hanoi(n, 1, 2, 3);

	cout << cnt << "\n";
	for (int i = 0; i < vec.size(); i++) {
		cout << vec[i].first << " " << vec[i].second << "\n";
	}

	return 0;
}
