//문제 자체는 매우 쉬움
//SWEA 페이지 익히

#include<iostream>
#include <algorithm>
#include <vector>
 
using namespace std;
 
int main(int argc, char** argv)
{
    int test_case;
     
    vector<vector<int>> vec;
    vector<int> tmpvec;
    int tmp;
    int n;
    for(int i=0;i<10;i++){
        cin>>n;
        for(int j=0;j<n;j++){
            cin>>tmp;
            tmpvec.push_back(tmp);
        }
        vec.push_back(tmpvec);
        tmpvec.clear();
    }
    
    int fltmp, sltmp, frtmp, srtmp, rtmp, ltmp;
    int ans=0;
    int size=0;
    for(int i = 0; i<10;i++){ 
        size = vec[i].size();
        for(int j=0;j<size;j++){
            if(vec[i][j] != 0 && j>1){
                fltmp = vec[i][j] - vec[i][j-1];
                sltmp = vec[i][j] - vec[i][j-2];
                frtmp = vec[i][j] - vec[i][j+1];
                srtmp = vec[i][j] - vec[i][j+2];
                 
                //나보다 높은 건물이 있을 경우
                if(fltmp < 0 || sltmp < 0 || frtmp < 0 || srtmp < 0){
                    continue;
                }
                 
                if(frtmp < srtmp) rtmp = frtmp;
                else rtmp = srtmp;
                 
                if(fltmp < sltmp) ltmp = fltmp;
                else ltmp = sltmp;
                 
                if(rtmp < ltmp) ans += rtmp;
                else ans += ltmp;
            }
        }
        //#부호와 함께 테스트케이스의 번호를 출력하고, 공백 문자 후 조망권이 확보된 세대의 수를 출력한다.
        cout<<"#"<<i+1<<" "<<ans<<"\n";
        ans=0;
    }
    return 0;//정상종료시 반드시 0을 리턴해야합니다.
}
